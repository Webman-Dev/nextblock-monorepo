-- lowercase sql

do $$
begin
  if not exists (select 1 from pg_type where typname = 'menu_location') then
    create type public.menu_location as enum ('HEADER', 'FOOTER', 'SIDEBAR');
  end if;
end
$$;

create table public.navigation_items (
  id bigint generated by default as identity primary key,
  language_id bigint not null references public.languages(id) on delete cascade,
  menu_key public.menu_location not null,
  label text not null,
  url text not null,
  parent_id bigint references public.navigation_items(id) on delete cascade,
  "order" integer not null default 0,
  page_id bigint references public.pages(id) on delete set null,
  created_at timestamp with time zone not null default now(),
  updated_at timestamp with time zone not null default now()
);

comment on table public.navigation_items is 'stores navigation menu items.';
comment on column public.navigation_items.menu_key is 'identifies the menu this item belongs to.';

create index idx_navigation_items_menu_lang_order on public.navigation_items (menu_key, language_id, "order");

alter table public.navigation_items enable row level security;

create policy "navigation_is_publicly_readable"
on public.navigation_items for select
to anon, authenticated
using (true);

create policy "admins_can_manage_navigation"
on public.navigation_items for all
to authenticated
using (public.get_current_user_role() = 'ADMIN')
with check (public.get_current_user_role() = 'ADMIN');

create or replace function public.handle_navigation_items_update()
returns trigger
language plpgsql
security definer set search_path = public
as $$
begin
  new.updated_at = now();
  return new;
end;
$$;

create trigger on_navigation_items_update
  before update on public.navigation_items
  for each row
  execute procedure public.handle_navigation_items_update();